import ProductList from "@/components/molecules/ProductList";
import ShortcutCategoryCard from "@/components/ShortcutCateroryCard";
import { API_ROUTES } from "@/helpers/constants";
import fetcher from "@/service/service";
import { fetchShortcutCategoriesForProduct } from "@/service/shortcutCategories";
import { selectOperatingSystem } from "@/store/appSlice";
import {
  selectSelectedProductId,
  setSelectedProductId,
} from "@/store/productSlice";
import Head from "next/head";
import { useRouter } from "next/router";
import { useDispatch, useSelector } from "react-redux";
import useSWR from "swr";

export default function ProductPage() {
  const router = useRouter();
  const dispatch = useDispatch();
  const selectedProductId = useSelector(selectSelectedProductId);
  const { data } = useSWR(API_ROUTES.products, fetcher);
  const operatingSystem = useSelector(selectOperatingSystem);
  const productList = data?.data;

  function handleProductItemClick(id: number) {
    dispatch(setSelectedProductId(id));
    router.replace(`/products/${id}`);
  }

  const { id } = router.query;
  const {
    data: productData,
    error: productError,
    isLoading,
  } = useSWR(id ? `${API_ROUTES.products}/${id}` : null, fetcher);
  const { data: shortcutCategoriesData } = useSWR(
    id ? [`${API_ROUTES.shortcutCategories}`, id, operatingSystem] : null,
    ([url, id, operatingSystem]) => {
      return fetchShortcutCategoriesForProduct(
        url,
        id as string,
        operatingSystem
      );
    }
  );
  if (isLoading) {
    return <div>Loading ....</div>;
  }
  if (productError) {
    return <div>Some error occurred</div>;
  }
  const productName = productData?.data?.attributes?.name;
  const shortcutCategoryList = shortcutCategoriesData?.data;
  const isShortcutCategoryListEmpty = shortcutCategoryList?.length === 0;
  return (
    <>
      <Head>
        <title>{productName}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={"flex justify-start h-[calc(100vh_-_58px)]"}>
        <div
          className={
            "h-full max-w-[300px] h-full w-full overflow-y-auto border-r-[1px]"
          }
        >
          <ProductList
            selectedProductId={selectedProductId}
            products={productList}
            onClick={handleProductItemClick}
          />
        </div>
        <div>
          <div
            className={
              "flex flex-col p-2 m-2 h-[calc(100vh_-_58px)] overflow-y-auto"
            }
          >
            <h1 className={"text-[36px] font-bold ml-2"}>{productName}</h1>
            {isShortcutCategoryListEmpty && (
              <div className={"mt-2"}>Coming soon</div>
            )}
            <div className={"mt-2] flex flex-wrap"}>
              {shortcutCategoryList?.map((item: any) => {
                return (
                  <ShortcutCategoryCard
                    key={item.id}
                    id={item.id}
                    attributes={item.attributes}
                  />
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
