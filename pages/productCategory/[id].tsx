import { API_ROUTES } from "@/helpers/constants";
import { extractImageData } from "@/helpers/helper";
import placeholder from "@/images/placeholder.png";
import fetcher from "@/service/service";
import { IMAGE_SIZE } from "@/types/enums";
import { Product, ProductCategory } from "@/types/types";
import Box from "@mui/material/Box";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import Grid from "@mui/material/Unstable_Grid2";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import qs from "qs";
import { useDispatch } from "react-redux";

export async function getStaticProps({ params }: any) {
  const query = qs.stringify({
    populate: {
      logo: {
        populate: "*",
      },
      products: {
        populate: ["logo"],
      },
    },
  });
  const { data: productCategoryData } = await fetcher(
    `${API_ROUTES.productCategories}/${params?.id}?${query}`
  );
  return {
    props: {
      productCategoryData,
    },
  };
}

export async function getStaticPaths() {
  const { data } = await fetcher(API_ROUTES.productCategories);
  const paths = data.map((item: Product) => ({
    params: { id: String(item.id) },
  }));
  return {
    paths,
    fallback: false, // can also be true or 'blocking'
  };
}

interface OwnProps {
  productCategoryData: ProductCategory;
}

export default function ProductCategoryPage({ productCategoryData }: OwnProps) {
  const router = useRouter();
  const dispatch = useDispatch();
  console.log(productCategoryData);
  const productCategoryName = productCategoryData?.attributes?.name;
  const productList = productCategoryData?.attributes?.products?.data || [];
  return (
    <>
      <Head>
        <title>{productCategoryName}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxWidth={"xl"}>
        <Box
          sx={{
            my: 2,
          }}
        >
          <Typography
            sx={{
              typography: {
                xs: "h4",
                md: "h3",
              },
            }}
            color="primary"
            gutterBottom
          >
            {productCategoryName}
          </Typography>
          <Box>
            <Grid container spacing={2}>
              {productList?.map((item: Product) => {
                const image = item?.attributes?.logo?.data;
                const { src, height, width } = extractImageData(
                  image,
                  IMAGE_SIZE.SMALL
                );

                return (
                  <Grid
                    sx={{
                      display: "flex",
                    }}
                    key={item.id}
                    xs={6}
                    sm={3}
                    md={2}
                    lg={2}
                    flexDirection={"column"}
                    justifyContent={"center"}
                    alignItems={"center"}
                  >
                    <Image
                      src={src || placeholder}
                      alt={item.attributes.name}
                      width={70}
                      height={70}
                    />
                    <Button color="inherit">{item.attributes.name}</Button>
                  </Grid>
                );
              })}
            </Grid>
          </Box>
        </Box>
      </Container>
    </>
  );
}
