import ProductCardList from "@/components/molecules/ProductCardList";
import { API_ROUTES } from "@/helpers/constants";
import fetcher from "@/service/service";
import {
  selectSelectedProductId,
  setSelectedProductId,
} from "@/store/productSlice";
import { Product } from "@/types/types";
import { debounce } from "lodash";
import Head from "next/head";
import { useRouter } from "next/router";
import { ChangeEvent, useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import useSWR from "swr";

export async function getStaticProps() {
  const { data } = await fetcher(API_ROUTES.products + "?populate[0]=logo");
  return {
    props: {
      productList: data,
    }, // will be passed to the page component as props
  };
}

export default function Home({ productList }: { productList: Product[] }) {
  const router = useRouter();
  const dispatch = useDispatch();
  const selectedProductId = useSelector(selectSelectedProductId);
  const [searchTerm, setSearchTerm] = useState("");
  const [searchedProductList, setSearchedProductList] = useState<Product[]>([]);
  function handleProductItemClick(id: number) {
    dispatch(setSelectedProductId(id));
    router.replace(`products/${id}`);
  }

  useEffect(() => {
    const searchedProductListInner = productList?.filter((product) =>
      product.attributes.name.toLowerCase().includes(searchTerm.toLowerCase())
    );
    console.log(searchTerm, searchedProductListInner);
    if (!searchTerm) {
      setSearchedProductList(productList);
      return;
    }
    if (searchedProductListInner?.length === 0) {
      setSearchedProductList([]);
    } else {
      setSearchedProductList(searchedProductListInner);
    }
  }, [searchTerm]);

  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {
    setSearchTerm(event.target.value);
  };

  return (
    <>
      <Head>
        <title>Key Combo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={
          "sm:h-[calc(100vh_-_58px)] h-[calc(100vh_-_150px)] overflow-y-auto"
        }
      >
        <div className="sm:p-10 py-4 w-full px-2">
          <div className={"w-full sm:w-[400px] mb-2"}>
            <input
              onChange={handleSearch}
              className={
                "border-[1px] border-gray-800 w-full rounded px-2 font-mono"
              }
              placeholder={"Search product"}
            />
          </div>
          <ProductCardList
            selectedProductId={selectedProductId}
            products={searchedProductList}
            onClick={handleProductItemClick}
          />
        </div>
      </div>
    </>
  );
}
